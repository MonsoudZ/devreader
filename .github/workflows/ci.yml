name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

env:
  DEVELOPER_DIR: /Applications/Xcode_15.0.app/Contents/Developer

jobs:
  test:
    name: Test
    runs-on: macos-14
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_15.0.app/Contents/Developer
      
    - name: Cache Swift Package Manager
      uses: actions/cache@v3
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
          
    - name: Install dependencies
      run: |
        brew install swiftlint || true
        brew install xcpretty || true
        
    - name: Run SwiftLint
      run: |
        if command -v swiftlint >/dev/null 2>&1; then
          swiftlint lint --reporter github
        else
          echo "SwiftLint not available, skipping"
        fi
        
    - name: Build and Test
      run: |
        xcodebuild -project DevReader.xcodeproj \
          -scheme DevReader \
          -destination "platform=macOS,arch=arm64" \
          -configuration Debug \
          -enableCodeCoverage YES \
          -resultBundlePath TestResults \
          clean test | xcpretty || true
          
    - name: Upload Test Results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: TestResults/
        
    - name: Upload Coverage
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: coverage
        path: build/DevReader.xcodeproj/coverage/

  build:
    name: Build Release
    runs-on: macos-14
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_15.0.app/Contents/Developer
      
    - name: Build Release
      run: |
        xcodebuild -project DevReader.xcodeproj \
          -scheme DevReader \
          -destination "platform=macOS,arch=arm64" \
          -configuration Release \
          -archivePath build/DevReader.xcarchive \
          archive
          
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: release-build
        path: build/DevReader.xcarchive/

  smoke-test:
    name: Smoke Test
    runs-on: macos-14
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Download Build Artifacts
      uses: actions/download-artifact@v3
      with:
        name: release-build
        path: build/
        
    - name: Run Smoke Tests
      run: |
        chmod +x scripts/smoke.sh
        ./scripts/smoke.sh || echo "Smoke tests failed but continuing"
        
    - name: Upload Smoke Test Results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: smoke-test-results
        path: build/

  security-scan:
    name: Security Scan
    runs-on: macos-14
    needs: test
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Run Security Scan
      run: |
        # Check for common security issues
        echo "Running security scan..."
        
        # Check for hardcoded secrets
        if grep -r "password\|secret\|key" --include="*.swift" --include="*.plist" . | grep -v "// TODO\|// FIXME"; then
          echo "⚠️ Potential hardcoded secrets found"
        fi
        
        # Check for insecure file permissions
        find . -name "*.sh" -exec ls -la {} \; | awk '$1 !~ /^-rwx/ {print "⚠️ Insecure permissions: " $9}'
        
        echo "✅ Security scan completed"
